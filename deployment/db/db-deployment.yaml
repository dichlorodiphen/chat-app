apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: chatapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatapp
      tier: db
  template:
    metadata:
      labels:
        app: chatapp
        tier: db
    spec:
      containers:
        - name: mongo
          image: mongo
          args: ["--dbpath", "/data/db"]
          livenessProbe:
            tcpSocket:
              port: 27017
            # exec:
            #   command:
            #     - mongosh
            #     - --eval
            #     - "db.adminCommand('ping')"
            initialDelaySeconds: 10
          readinessProbe:
            tcpSocket:
              port: 27017
            # exec:
            #   command:
            #     - mongosh
            #     - --eval
            #     - "db.adminCommand('ping')"
            initialDelaySeconds: 10
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: password
          # volumeMounts:
          #   - name: "mongo-data"
          #     mountPath: "/data/db"
          resources:
            limits:
              memory: "512Mi"
              cpu: 1
          ports:
            - containerPort: 27017
      volumes:
        - name: "mongo-data"
          hostPath:
            path: "/data/db"
